(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{350:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_6-1-events-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-events-3"}},[t._v("#")]),t._v(" 6.1 events（3）")]),t._v(" "),a("p",[t._v("  这个小节我们来分析"),a("code",[t._v("add")]),t._v("方法，这个方法本身并不复杂，但是由于会处理很多问题，所以就显得非常复杂了")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("handler")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Function"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("capture")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("passive")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 省略部分")]),t._v("\n  target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    supportsPassive\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" capture"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" passive "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" capture\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("  我们先来看"),a("code",[t._v("add")]),t._v("方法的关键性逻辑，其实就是调用"),a("code",[t._v("el.addEventListener")]),t._v("添加一个事件监听，并不是所有浏览器"),a("code",[t._v("addEventListener")]),t._v("都支持第三个"),a("code",[t._v("options")]),t._v("选项，这么定义可以判断是是否支持"),a("code",[t._v("options")]),t._v("选项。\n接下来我们看这段省略的代码")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// async edge case #6566: inner click event triggers patch, event handler")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// attached to outer element during patch, and triggered again. This")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// happens because browsers fire microtask ticks between event propagation.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the solution is simple: we save the timestamp when a handler is attached,")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// and the handler would only fire if the event passed to it was fired")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// AFTER it was attached.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异步边缘案例6566：内部点击事件触发补丁，事件处理程序在patch期间附加到外部元素，")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 然后再次触发。发生这种情况是因为浏览器在事件传播之间触发微任务节拍。解决方案很简单：")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我们在附加处理程序时保存时间戳，只有当传递给它的事件在附加后被激发时，处理程序才会激发")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("useMicrotaskFix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" attachedTimestamp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" currentFlushTimestamp\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" original "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" handler\n    handler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" original"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_wrapper")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// no bubbling, should always fire.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this is just a safety net in case event.timeStamp is unreliable in")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// certain weird environments...")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无冒泡，应该总是触发。这只是一种安全措施，")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以防某些奇怪的环境中的事件时间戳不可靠的情况。")]),t._v("\n        e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentTarget "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// event is fired after handler attachment")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 事件触发在附加程序之后")]),t._v("\n        e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeStamp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" attachedTimestamp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bail for environments that have buggy event.timeStamp implementations")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为有bug的event.timeStamp实现提供担保")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// iOS中event.timeStamp 在history.pushState后是0")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #9681 QtWebEngine event.timeStamp is negative value")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// QtWebEngine内核会取到一个负数值")]),t._v("\n        e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeStamp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #9448 bail if event is fired in another document in a multi-page")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// electron/nw.js app, since event.timeStamp will be using a different")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// starting reference")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果在多页面Electron/NW.js应用程序中的另一个文档中触发bailifevent，")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 则event.timeStamp将使用不同的起始参考。")]),t._v("\n        e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ownerDocument "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" document\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("original")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这里注释了"),a("code",[t._v("#6566号issue")]),t._v("，大致描述是这个样子的")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-if")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("expand"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" // block 1\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@click")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("expand = false, countA++"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Expand is True"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("//element 1\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("expand"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-if")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("!expand"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@click")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("expand = true, countB++"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" // block 2\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Expand is False"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" // element 2\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("有这样一个例子，当我点击"),a("code",[t._v("element1")]),t._v("时，"),a("code",[t._v("expand")]),t._v("会变为"),a("code",[t._v("false")]),t._v("，那么就会更新"),a("code",[t._v("dom")]),t._v("去渲染"),a("code",[t._v("block2")]),t._v("，但是事实上有四种情况"),a("br"),t._v("\n•\t点击事件监听block 1，block2效果很好"),a("br"),t._v("\n•\t点击事件监听element 1，element 2效果很好"),a("br"),t._v("\n•\t点击事件监听block 1，element 2改成expand为true可以。但是不能变回去。"),a("br"),t._v("\n•\t点击事件监听element 1和block 2，不能改成expand为false。但可以更改expand为true。"),a("br"),t._v("\n然后尤大给与了回复："),a("br"),t._v("\n•\t触发内部点击事件"),a("code",[t._v("<i>")]),t._v("，触发 nextTick 的第一次更新（微任务）"),a("br"),t._v("\n•\t微任务在事件冒泡到外部 div 之前被处理。在更新期间，点击侦听器被添加到外部 div。"),a("br"),t._v("\n•\t因为DOM结构是一样的，所以外层div和内层元素都被复用了。"),a("br"),t._v("\n•\t事件最终到达外部 div，触发第一次更新添加的监听器，进而触发第二次更新。"),a("br"),t._v("\n这在修复中非常棘手，其他利用微任务进行更新排队的库也有这个问题（例如 Preact）。React 似乎没有这个问题，因为他们使用合成事件系统（可能是由于像这样的边缘情况）。"),a("br"),t._v("\n  这已经是v2.4的问题了。接下来我们看这部分代码是怎么处理的，这里首先是判断"),a("code",[t._v("useMicrotaskFix")]),t._v("，其定义如下")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" useMicrotaskFix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" isUsingMicroTask "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isFF "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isFF"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("  isUsingMicroTask是否能适用微任务，这个东西我们在"),a("code",[t._v("nextTick")]),t._v("小节我们已经分析过了，如果浏览器支持微任务的话，那么我们Vue的更新都将采用微任务队列的异步来处理，这将会有极大的性能提升。但是使用微任务就会带来上述冒泡问题，所以接下来就要对此做处理。"),a("br"),t._v("\n  接下来定义"),a("code",[t._v("attachedTimestamp")]),t._v("保存"),a("code",[t._v("currentFlushTimestamp")]),t._v("，这个东西我们也见过它，在分析"),a("code",[t._v("nextTick")]),t._v("的调度函数"),a("code",[t._v("flushSchedulerQueue")]),t._v("执行时会首先将其记录一个时间，这个时间记录是比较复杂的")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Async edge case #6566 requires saving the timestamp when event listeners are")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// attached. However, calling performance.now() has a perf overhead especially")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if the page has thousands of event listeners. Instead, we take a timestamp")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// every time the scheduler flushes and use that for all event listeners")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// attached during that flush.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异步边缘情况#6566要求在附加事件侦听器时保存时间戳。然而，调用performance.now（）会")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 产生性能开销，特别是当页面有数千个事件侦听器时。相反，我们在调度程序每次刷新时")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 都会获取一个时间戳，并将其用于刷新期间连接的所有事件侦听器。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" currentFlushTimestamp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Async edge case fix requires storing an event listener's attach timestamp.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异步边缘案例修复需要存储事件侦听器的附加时间戳。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getNow")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Determine what event timestamp the browser is using. Annoyingly, the")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// timestamp can either be hi-res (relative to page load) or low-res")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (relative to UNIX epoch), so in order to compare time we have to use the")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// same timestamp type when saving the flush timestamp.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// All IE versions use low-res event timestamps, and have problematic clock")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// implementations (#9632)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 确定浏览器正在使用的事件时间戳。令人讨厌的是，时间戳可以是高分辨率（相对于页面加载）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或低分辨率（相对于UNIX历元），因此为了比较时间，我们必须在保存刷新时间戳时使用相同")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 的时间戳类型。所有IE版本都使用低分辨率事件时间戳，并且有问题的时钟实现（#9632）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inBrowser "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("isIE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" performance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("performance\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    performance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" performance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Event'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeStamp\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if the event timestamp, although evaluated AFTER the Date.now(), is")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// smaller than it, it means the event is using a hi-res timestamp,")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// and we need to use the hi-res version for event listener timestamps as")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// well.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果事件时间戳（虽然在Date.now（）之后计算）小于它，则意味着事件使用的是高分辨率时间戳，")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我们还需要使用高分辨率版本的事件侦听器时间戳")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getNow")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" performance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("  由于不同浏览器会使用不同的时间精度，这就使我们"),a("code",[t._v("getNow")]),t._v("定义比较复杂，这里首先要判断是浏览器环境，并且不是"),a("code",[t._v("ie")]),t._v("浏览器，因为对于"),a("code",[t._v("ie")]),t._v("来说"),a("code",[t._v("performance.now()")]),t._v("返回的时间和"),a("code",[t._v("Date.now()")]),t._v("是相同，这倒是省去了我们不少事。"),a("br"),t._v("\n  接下来会获取"),a("code",[t._v("window.performance")]),t._v("，如果存在的话的话继续下一步判断，这时候会调用"),a("code",[t._v("getNow")]),t._v("方法，也就是"),a("code",[t._v("Date.now")]),t._v("生成时间戳，然后用"),a("code",[t._v("document.createEvent")]),t._v("方法创建一个事件并取事件时间戳，虽然事件时间戳是在"),a("code",[t._v("Date.now")]),t._v("后面调用的，但是"),a("code",[t._v("Date.now")]),t._v("任然比后者大，说明是高分辨率时间。那么就将"),a("code",[t._v("getNow")]),t._v("赋值为"),a("code",[t._v("performance. now()")]),t._v("。"),a("br"),t._v("\n  然后接下来就是在组件发生更新时执行"),a("code",[t._v("flushSchedulerQueue")]),t._v("时首先会调用"),a("code",[t._v("getNow")]),t._v("方法并将时间保存在"),a("code",[t._v("currentFlushTimestamp")]),t._v("，然后我们回到我们"),a("code",[t._v("add")]),t._v("中的逻辑")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("useMicrotaskFix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" attachedTimestamp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" currentFlushTimestamp\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" original "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" handler\n    handler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" original"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_wrapper")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentTarget "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n        e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeStamp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" attachedTimestamp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n        e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeStamp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n        e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ownerDocument "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" document\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("original")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("  我们把注释都去掉会看的更清晰一点，这里会获取当前"),a("code",[t._v("flush")]),t._v("的时间戳，并且保存在"),a("code",[t._v("attachedTimestamp")]),t._v("。然后用"),a("code",[t._v("original")]),t._v("保存原函数"),a("code",[t._v("handler")]),t._v("，然后给"),a("code",[t._v("handler")]),t._v("重新赋值，这里给原函数"),a("code",[t._v("original")]),t._v("添加一个"),a("code",[t._v("_wrapper")]),t._v("函数，这样的好处是最后调用时能绑定到原函数"),a("code",[t._v("this")]),t._v("。但是不是任何情况下都是会调用原函数的，这里做了几个判断：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("e.target === e.currentTarget")]),t._v("也就是当前点击元素和事件绑定元素一致。不存在冒泡行为，那么就可以直接调用了，我们要解决的就是微任务在事件冒泡前处理的问题，如果没有冒泡的话那么这个问题也不存在。")]),t._v(" "),a("li",[a("code",[t._v("e.timeStamp >= attachedTimestamp")]),t._v("，事件触发在微任务更新之后，但是如果时间精度不够的话可能也会相等。这时也要执行方法。")]),t._v(" "),a("li",[a("code",[t._v("e.timeStamp <= 0 || e.target.ownerDocument !== document")]),t._v("这些是处理一些特殊情况下"),a("code",[t._v("timeStamp")]),t._v("问题。")])]),t._v(" "),a("p",[t._v("  满足这几个情况就认为事件应该被调用。"),a("br"),t._v("\n  我们回过头来看updateListeners剩余逻辑")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isUndef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cur"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isUndef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("old"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cur "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" old"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      old"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fns "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur\n      on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" old\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("  上面我们讲的是"),a("code",[t._v("old")]),t._v("不存在时候逻辑，也就是添加事件时候逻辑，如果"),a("code",[t._v("old")]),t._v("和"),a("code",[t._v("cur")]),t._v("都存在并且"),a("code",[t._v("cur !== old")]),t._v("要执行的逻辑就非常简单了，这是更新时的逻辑，我们要做的事也很简单，直接将"),a("code",[t._v("old.fns")]),t._v("赋值为"),a("code",[t._v("cur")]),t._v("，"),a("code",[t._v("on[name]")]),t._v("赋值为"),a("code",[t._v("old")]),t._v("。这里的"),a("code",[t._v("old")]),t._v("其实就更新前的"),a("code",[t._v("invoker")]),t._v("函数，"),a("code",[t._v("invoker")]),t._v("就像一个容器，它的执行内容都是"),a("code",[t._v("invoker.fns")]),t._v("中的函数，事件改变其实就"),a("code",[t._v("fns")]),t._v("中的内容改变了，所以直接把"),a("code",[t._v("old.fns")]),t._v("替换就行了，至于添加事件监听的过程也不需要重新执行了，因为事件名都是一致的。"),a("br"),t._v("\n  再往下就跳出了for循环，接下来又是一个for循环")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" oldOn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isUndef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      event "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("normalizeEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldOn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("capture"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("  因为更新后"),a("code",[t._v("dom")]),t._v("可能没有事件了，那原本绑定的事件就要移除，所以就找"),a("code",[t._v("oldOn")]),t._v("中有的事件而"),a("code",[t._v("on")]),t._v("中没有的事件把它给移除，调用的是"),a("code",[t._v("remove")]),t._v("方法")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("handler")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Function"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("capture")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  _target"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" HTMLElement")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_wrapper "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    capture\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("  就是调用原生"),a("code",[t._v("removeEventListener")]),t._v("删除事件监听。到这里我们普通标签事件就分析完毕了。不知道你有没有发现，我们这里一直都是对"),a("code",[t._v("data.on")]),t._v("处理，而对于组件的事件来说，直接监听事件需要"),a("code",[t._v(".native")]),t._v("修饰符，并且会被放到"),a("code",[t._v("data.nativeOn")]),t._v("中。"),a("br"),t._v("\n  在3.1小节我们分析了组件"),a("code",[t._v("vnode")]),t._v("的创建过程，在"),a("code",[t._v("createComponent")]),t._v("中有这样一段逻辑：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// extract listeners, since these needs to be treated as")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// child component listeners instead of DOM listeners")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提取侦听器，因为这些侦听器需要被视为子组件侦听器，而不是DOM侦听器")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listeners "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("on\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// replace with listeners with .native modifier")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// so it gets processed during parent component patch.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 替换为带有“native”修饰符的侦听器，以便在父组件patch期间对其进行处理")]),t._v("\n  data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("on "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nativeOn\n")])])]),a("p",[t._v("  也就是把"),a("code",[t._v("data.on")]),t._v("保存到"),a("code",[t._v("listeners")]),t._v("中，"),a("code",[t._v("data.on")]),t._v("重新赋值为"),a("code",[t._v("data.nativeOn")]),t._v("，那之后在"),a("code",[t._v("patch")]),t._v("时的处理"),a("code",[t._v("data.on")]),t._v("其实就是"),a("code",[t._v("data.nativeOn")]),t._v("了，这样就没有任何问题了。而原本的"),a("code",[t._v("data.on")]),t._v("其实应该是监听组件内部"),a("code",[t._v("emit")]),t._v("的自定义事件。"),a("br"),t._v("\n  值得一提的是对于组件"),a("code",[t._v("data.on")]),t._v("后续处理和我们前面流程是没什么不同的，但组件"),a("code",[t._v("vnode.elm")]),t._v("其实就是组件根节点，所以组件的"),a("code",[t._v("nativeOn")]),t._v("事件都会绑定到其根节点"),a("code",[t._v("dom")]),t._v("上。")])])}),[],!1,null,null,null);a.default=e.exports}}]);